AWSTemplateFormatVersion: '2010-09-09'
Resources:
  AmazonCloudWatchEventRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub 'cwe-pipeline-events-${AWS::AccountId}'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          -
            Effect: 'Allow'
            Principal:
              Service:
                - 'events.amazonaws.com'
            Action: 'sts:AssumeRole'
      Path: '/'
      Policies:
        -
          PolicyName: cwe-pipeline-execution
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              -
                Effect: 'Allow'
                Action: 'codepipeline:StartPipelineExecution'
                Resource: !Sub 'arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:demo-Infra-Pipeline'
        -
          PolicyName: cwe-codebuild-execution
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              -
                Effect: 'Allow'
                Action: 'codebuild:StartBuild'
                Resource: 
                  - !Sub 'arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:project/Validate-CFN-Templates'

  # IAM Role assumed by CodePipeline during pipeline executions. Gives permission to manage artifacts,
  # Call CodeBuild project and monitor status, and create and update CloudFormation stacks as part
  # of the deployment
  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub 'demo-CodePipelineRole-${AWS::AccountId}'
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AWSCodeStarFullAccess'
        - 'arn:aws:iam::aws:policy/AWSCodeCommitPowerUser'
        - 'arn:aws:iam::aws:policy/CloudWatchEventsFullAccess'
      Policies:
        - PolicyName: CodePipelineAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Sid: GetAndPutArtifacts
                Effect: Allow
                Action:
                  - s3:DeleteObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:ListBucket
                  - s3:PutObject
                  - s3:GetBucketPolicy
                Resource:
                  - !Sub 'arn:aws:s3:::demo-infra-pipeline-${AWS::AccountId}'
                  - !Sub 'arn:aws:s3:::demo-infra-pipeline-${AWS::AccountId}/*'
              - Sid: ExecuteCloudFormation
                Effect: Allow
                Action:
                  - cloudformation:CreateChangeSet
                  - cloudformation:CreateStack
                  - cloudformation:DeleteChangeSet
                  - cloudformation:DeleteStack
                  - cloudformation:DescribeChangeSet
                  - cloudformation:DescribeStackEvents
                  - cloudformation:DescribeStackResource
                  - cloudformation:DescribeStackResources
                  - cloudformation:DescribeStacks
                  - cloudformation:ExecuteChangeSet
                  - cloudformation:List*
                  - cloudformation:SetStackPolicy
                  - cloudformation:UpdateStack
                  - cloudformation:UpdateTerminationProtection
                  - cloudformation:GetTemplate
                  - cloudformation:ValidateTemplate
                Resource: !Sub 'arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/infra-pipeline-resources/*'
              - Sid: CodeBuildRoleToCloudFormation
                Effect: Allow
                Action:
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuilds
                  - codebuild:StopBuild
                Resource: 
                  - !Sub 'arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:project/Validate-CFN-Templates'
              - Sid: CodeStarConnection
                Effect: Allow
                Action: codestar-connections:UseConnection
                Resource: '*'
              - Sid: SNSPublishApproval
                Effect: Allow
                Action:
                  - sns:Publish
                Resource: !Sub 'arn:aws:sns:${AWS::Region}:${AWS::AccountId}:Manual-Approval-Notification-Infra'
              - Sid: IamPassRole
                Effect: Allow
                Action:
                  - iam:PassRole
                Resource: !GetAtt CloudFormationStackRole.Arn
              - Sid: CloudWatchLogGroups
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - logs:DescribeLogStreams
                Resource: !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/demo/pipeline-infastructure-${AWS::AccountId}-${AWS::Region}:*'
  
  # Role that is passed to CloudFormation in order to deploy the production stack
  CloudFormationStackRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub 'demo-CloudFormationStackRole-${AWS::AccountId}'
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com 
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CloudFormationExecution
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Sid: CloudWatchLogsPolicy
                Effect: Allow
                Action: 
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: '*'
              - Sid: S3ObjectPolicy
                Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:ListBucket
                Resource: 
                  - !Sub 'arn:aws:s3:::demo-infra-pipeline-${AWS::AccountId}'
                  - !Sub 'arn:aws:s3:::demo-infra-pipeline-${AWS::AccountId}/*'
              - Sid: IamPermission
                Effect: Allow
                Action:
                  - iam:*
                Resource: '*'
              - Sid: EC2Permissions
                Effect: Allow
                Action:
                  - ec2:*
                Resource: '*'
             
  # Role assumed by CodeBuild projects. Permissions granted allow for logging to CloudWatch, managing artifacts,
  # validating CloudFormation templates, and the various permissions required to execute taskcat.
  # Note: The CloudFormation stack policy is also attached to this role, since the same permissions are required to
  # create/delete the test stacks through taskcat
  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub 'demo-CodeBuildRole-${AWS::AccountId}'
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CodeBuildAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Sid: LogToCloudWatch
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - logs:DescribeLogStreams
                Resource: 
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/demo/Validate-CFN-Templates-stage-${AWS::AccountId}-${AWS::Region}:*"
              - Sid: GetAndPutArtifacts
                Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:ListBucket
                Resource:
                  - !Sub 'arn:aws:s3:::demo-infra-pipeline-${AWS::AccountId}/*'
              - Sid: ValidateCloudFormationTemplate
                Effect: Allow
                Action: cloudformation:ValidateTemplate
                Resource: '*'

Outputs:

  AmazonCloudWatchEventRole:
    Description: CloudWatch EventBridge IAM role
    Value: !GetAtt  AmazonCloudWatchEventRole.Arn
    Export:
      Name: 
        'Fn::Sub': '${AWS::StackName}-AmazonCloudWatchEventRole'

  PipelineRole:
    Description: PipelineRole IAM role
    Value: !GetAtt  PipelineRole.Arn
    Export:
      Name: 
        'Fn::Sub': '${AWS::StackName}-PipelineRole'

  CloudFormationStackRole:
    Description: Iam role with permissions to execute cloudformation
    Value: !GetAtt  CloudFormationStackRole.Arn
    Export:
      Name: 
        'Fn::Sub': '${AWS::StackName}-CloudFormationStackRole'

  CodeBuildRole:
    Description: CodeBuild IAM role
    Value: !GetAtt  CodeBuildRole.Arn
    Export:
      Name: 
        'Fn::Sub': '${AWS::StackName}-CodeBuildRole'

  